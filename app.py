# --------------------LIBRER√çAS----------------------------#
import json
import os
import warnings
from webbrowser import get
import matplotlib.pyplot as plt
import chart_studio.plotly as py
import cufflinks
import folium
import geopandas as gpd
import numpy as np
import pandas as pd
import plotly.graph_objs as go
import plotly.subplots as sp
import plotly_express as px
import requests
from branca.colormap import LinearColormap
from folium.plugins import (
    FastMarkerCluster, FloatImage, HeatMap, MarkerCluster)
from plotly.offline import init_notebook_mode, iplot
from streamlit_folium import st_folium
from streamlit_lottie import st_lottie
from PIL import Image
import streamlit as st
from plotly.subplots import make_subplots
import pydeck as pdk
import seaborn as sns



sns.set()
warnings.simplefilter(action='ignore', category=FutureWarning)
cufflinks.go_offline(connected=True)
init_notebook_mode(connected=True)

def main():
    
    # --------------------------------------------------------CONFIGURACI√ìN DE LA P√ÅGINA---------------------------------------------------#
    st.set_page_config(page_title="Austin al turismo",layout="wide", page_icon="üèôÔ∏è", initial_sidebar_state="expanded")
    st.set_option("deprecation.showPyplotGlobalUse", False)   

    def load_lottieurl(url: str):
        r = requests.get(url)
        if r.status_code != 200:
            return None
        return r.json()

    # -----------------------------------------------------------------Cabecera----------------------------------------------------------------
    st.title("Austin al turismo (Marco A. Garc√≠a Palomo)")
    st.markdown('')
    st.markdown('')
    st.markdown('')
    image = Image.open('Imag/20134c37c563cf1d3022e223443bdc8c.jpg')
    st.image(image, caption='Austin en pinterest',use_column_width='auto')
    st.markdown('')
    st.markdown('')
    st.markdown('')
    st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Austin es la capital del estado estadounidense de Texas y del condado de Travis. Localizada en el suroeste de Estados Unidos, concretamente en Texas Central,‚Äã es la 11.¬∫ ciudad m√°s poblada en los Estados Unidos y la 4.¬∫ m√°s grande en el estado de Texas. Fue la tercera ciudad en crecimiento poblacional en los EE UU entre 2000 y 2006.‚Äã Austin es tambi√©n la segunda capital estatal m√°s grande de Estados Unidos.‚Äã Para julio de 2012, ten√≠a una poblaci√≥n de m√°s de 1.000.000 habs.‚Äã La ciudad es el centro cultural y econ√≥mico del √°rea metropolitana de Austin, la cual ten√≠a una poblaci√≥n estimada de 1 834 303 en 2012. Se encuentra a orillas del r√≠o Colorado (no confundir con el r√≠o Colorado que forma frontera entre Estados Unidos y M√©xico).</div> """, unsafe_allow_html=True)
    st.markdown('')
    st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Adem√°s de sus funciones como sede del gobierno del estado, Austin es un centro comercial, fabril, educativo y de convenciones. Entre su producci√≥n, destacan los art√≠culos de alta tecnolog√≠a, como equipos el√©ctricos, semiconductores y equipos inform√°ticos. Es la sede de la Universidad de Texas en Austin (1883).</div> """, unsafe_allow_html=True)
    st.markdown('')
    st.markdown('')
    st.markdown('')
    col1,col2= st.columns(2)
    with col1:
        img= Image.open('Imag/Barton-Springs-Pool.jpg')
        st.image(img,caption='Piscina de Barton Springs')
        img1=Image.open('Imag/Lady-Bird-Lake.jpg')
        st.image(img1,caption='Lago Lady Bird')
        img2= Image.open('Imag/lake-travis-austin.jpg')
        st.image(img2,caption='Lago Travis')
        img3= Image.open('Imag/Metropolitan-Park.jpg')
        st.image(img3,caption='Parque metropolitano')
    with col2:
        img4= Image.open('Imag/34fe50d145c5819d6ee87ee5280c9104.jpg')
        st.image(img4,caption='Parque estatal Mckinney falls')
        img5= Image.open('Imag\R.jpg')
        st.image(img5,caption='Monte Bonnell')
        img6= Image.open('Imag/Umlauf-Sculpture-Garden.jpg') 
        st.image(img6,caption='Jard√≠n de la escultura Umlauf')
        img7=Image.open('Imag/University-of-Texas-at-Austin.jpg')
        st.image(img7,caption='Universidad de Texas')

    # -----------------------------------------------LECTURA DE DATOS Y PREPROCESAMIENTO------------------------------------#

    listings = pd.read_csv("input/listings.csv", index_col= "id")
    listings_details = pd.read_csv("input/listings_details.csv",index_col= "id",low_memory=False)
    calendar = pd.read_csv("input/calendar.csv", parse_dates=['date'], index_col=['listing_id'])
    reviews_details = pd.read_csv("input/reviews_details.csv", parse_dates=['date'])
    target_columns = ["property_type", "accommodates", "first_review", "review_scores_value", "review_scores_cleanliness", "review_scores_location", "review_scores_accuracy", "review_scores_communication", "review_scores_checkin", "review_scores_rating", "maximum_nights", "listing_url", "host_is_superhost", "host_about", "host_response_time", "host_response_rate"]
    listings = pd.merge(listings, listings_details[target_columns], on='id', how='left')
    listings = listings.drop(columns=['neighbourhood_group'])
    listings['host_response_rate'] = pd.to_numeric(listings['host_response_rate'].str.strip('%'))


    #------------------------------------------------------TABS---------------------------------------------------#
    st.markdown('')
    st.markdown('')
    st.markdown('')
    st.title("B√∫squeda de datos")
    st.markdown('')
    st.markdown('')
    st.markdown('')
    tabs = st.tabs(["N√∫mero de alquileres por c√≥digo postal", "Tipos de propiedades y alojamientos",'N√∫mero de alojados', 'Precios por c√≥digo postal',"Puntuaciones de ubicaci√≥n frente al precio", 'Rese√±as de los hu√©spedes', 'Para encontrar un buen hospedador', 'L√≠neas futuras y conclusiones'])

    # -------------------------------------------------------TAB 1-----------------------------------------------------#
    tab_plots = tabs[0]  
    with tab_plots:
        st.markdown('')
        st.markdown('')
        st.markdown('')

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Aunque lo que tenemos son c√≥digo postales, como veremos m√°s adelante, la mayor√≠a de los listados est√°n en el centro de la ciudad (78704, 78702 y 78701).</div> """, unsafe_allow_html=True)

        feq=listings['neighbourhood'].value_counts().sort_values(ascending=True)
        feq.plot.barh(figsize=(10, 8), color='b', width=1)
        plt.title("N√∫mero de alquileres por c√≥digo postal", fontsize=20)
        plt.xlabel('N√∫mero de listas', fontsize=12)
        st.pyplot()
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'></div> """, unsafe_allow_html=True)



    # -------------------------------------------------------TAB 2-----------------------------------------------------#
    tab_plots = tabs[1]  
    with tab_plots:
        st.markdown('')
        st.markdown('')
        st.markdown('')

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>    Las reglas de Austin sobre el tipo de alojamiento son muy laxas, no tienen l√≠mite de tiempo y adem√°s se permite el alquiler de apartamentos y casas completas.</div> """, unsafe_allow_html=True)


        freq = listings['room_type']. value_counts().sort_values(ascending=True)
        freq.plot.barh(figsize=(15, 3), width=1, color = ["r","g","b"])
        plt.title('Tipos de habitaciones en Austin', fontsize=18)
        plt.xlabel('N√∫mero de habitaciones', fontsize=14)
        st.pyplot()

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>En el conjunto de datos, encontramos much√≠simos tipos de propiedades diferentes, sin embargo, muchos de esos tipos de propiedades tienen muy pocos listados en Austin. En la figura a continuaci√≥n, solo mostramos tipos de propiedades con al menos 100 listados. Como podemos ver, la gran mayor√≠a de las propiedades en Austin son apartamentos, pisos o casas completas.</div> """, unsafe_allow_html=True)
        st.markdown('')
        prop = listings.groupby(['property_type','room_type']).room_type.count()
        prop = prop.unstack()
        prop['total'] = prop.iloc[:,0:3].sum(axis = 1)
        prop = prop.sort_values(by=['total'])
        prop = prop[prop['total']>=100]
        prop = prop.drop(columns=['total'])

        prop.plot(kind='barh',stacked=True, color = ["r"],
                  linewidth = 1, grid=True, figsize=(15,8), width=1)
        plt.title('Tipos de propiedades en Austin', fontsize=18)
        plt.xlabel('N√∫mero de listados', fontsize=14)
        plt.ylabel("")
        st.pyplot()

    # -------------------------------------------------------TAB 3-----------------------------------------------------#
    tab_plots = tabs[2]  
    with tab_plots:
        st.markdown('')
        st.markdown('')
        st.markdown('')

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Los alojamientos con m√°s anuncios son para 2 personas, aunque hay una gran cantidad de anuncios para 4 personas. Adem√°s, el l√≠mite de Airbnb utiliza un m√°ximo de 16 hu√©spedes por anuncio.</div> """, unsafe_allow_html=True)
        st.markdown('')
        feq=listings['accommodates'].value_counts().sort_index()
        feq.plot.bar(figsize=(10, 8), color='b', width=1, rot=0)
        plt.title("N√∫mero de personas alojadas", fontsize=20)
        plt.ylabel('N√∫mero de anuncios', fontsize=12)
        plt.xlabel('Alojados', fontsize=12)
        st.pyplot() 

    # -------------------------------------------------------TAB 4-----------------------------------------------------#
    tab_plots = tabs[3]  
    with tab_plots:
        st.markdown('')
        st.markdown('')
        st.markdown('')

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Comparamos los alojamientos para dos personas, ya que son los alojamientos m√°s comunes.</div> """, unsafe_allow_html=True)

        feq = listings[listings['accommodates']==2]
        feq = feq.groupby('neighbourhood')['price'].mean().sort_values(ascending=True)
        feq.plot.barh(figsize=(10, 8), color='b', width=1)
        plt.title("Precio medio diario para un alojamiento para 2 personas", fontsize=20)
        plt.xlabel('Precio medio diario', fontsize=12)
        plt.ylabel("")
        st.pyplot()

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'></div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>La zona m√°s cara de Austin, con diferencia, coincide con el c√≥digo postal 78712, si bien, esta zona es c√©ntrica, el valor del alquiler nos hace sospechar que algo pasa. Por ello, extraje los apartamentos en alquiler de esa zona y result√≥ que de los tres que hab√≠a solo uno era para dos personas y adem√°s con un precio bastante alto.</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'></div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')

        df78712=listings.loc[listings.loc[:, 'neighbourhood'] == 78712]
        Timo=df78712[df78712['accommodates']==2]
        Timo
        st.markdown('')
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Podemos ver que hay dos zonas m√°s con alto precio de alquiler, aunque m√°s razonables, esto se debe a que estas dos zonas est√°n muy bien situadas, aunque no son c√©ntricas, y son barrios muy tranquilos, como se pueden ver en estos dos enlaces: </div> """, unsafe_allow_html=True)

        st.markdown('')
        st.markdown('')
        st.markdown('')
        url1 = 'https://www.zipdatamaps.com/es_78744'
        st.markdown(f'''<a href={url1}><button style="background-color:White;">https://www.zipdatamaps.com/es_78744</button></a>''',unsafe_allow_html=True)
        url1 = 'https://www.zipdatamaps.com/es_78750'
        st.markdown(f'''<a href={url1}><button style="background-color:White;">https://www.zipdatamaps.com/es_78750</button></a>''',unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')
        st.markdown('')

        feq = feq.transpose()
        feq=feq.drop(columns=['neighbourhood'])
        feq=feq.drop(columns=['index1'])
        adam = gpd.read_file("input/neighbourhoods.geojson")
        feq = pd.DataFrame(feq)
        adam['neighbourhood']= adam['neighbourhood'].astype(float)
        adam = pd.merge(adam, feq, on='neighbourhood', how='left')
        adam.rename(columns={'price': 'average_price'}, inplace=True)
        adam.average_price = adam.average_price.round(decimals=0)
        map_dict = adam.set_index('neighbourhood')['average_price'].to_dict()
        color_scale = LinearColormap(['yellow','red'], vmin = min(map_dict.values()), vmax = max(map_dict.values()))

        def get_color(feature):
            value = map_dict.get(feature['properties']['neighbourhood'])
            return color_scale(value)
        map3 = folium.Map(location=[30.26715, -97.74306], zoom_start=11)
        folium.GeoJson(data=adam,
                    name='Austin',
                    tooltip=folium.features.GeoJsonTooltip(fields=['neighbourhood', 'average_price'],
                                                          labels=True,
                                                          sticky=False),
                    style_function= lambda feature: {
                        'fillColor': get_color(feature),
                        'color': 'black',
                        'weight': 1,
                        'dashArray': '5, 5',
                        'fillOpacity':0.5
                        },
                    highlight_function=lambda feature: {'weight':3, 'fillColor': get_color(feature), 'fillOpacity': 0.8}).add_to(map3)

        lats2018 = listings['latitude'].tolist()
        lons2018 = listings['longitude'].tolist()
        locations = list(zip(lats2018, lons2018))
        map1 = folium.Map(location=[30.26715, -97.74306], zoom_start=11.5)
        FastMarkerCluster(data=locations).add_to(map1)

    col1,col2= st.columns(2)
    with col1:
        st.write("Mapa de las localizaciones de los alojamientos")
        st_folium(map1, returned_objects=[])
    with col2:
        st.write("Mapa precios medio por c√≥digo postal")
        st_folium(map3, returned_objects=[])


    # -------------------------------------------------------TAB 5-----------------------------------------------------#
    tab_plots = tabs[4]  
    with tab_plots:
        st.markdown('')
        st.markdown('')
        st.markdown('')

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>En esta secci√≥n, agrupamos las puntuaciones de revisi√≥n de la ubicaci√≥n por c√≥digo postal (solo listados con al menos 10 revisiones).</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>A continuaci√≥n, vemos que los vecindarios centrales generalmente obtienen una puntuaci√≥n m√°s alta en la puntuaci√≥n de revisi√≥n de ubicaci√≥n y tambi√©n podemos ver que no son las ubicaciones m√°s caras, excepto una como hemos comentado, que ni siquiera llega a 10 rese√±as y no aparece en la gr√°fica de valoraci√≥n.</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Al mirar las valoraciones podemos ver que est√°n por encima del 4 siendo el 5 la nota m√°s alta, por lo tanto la gr√°fica se muestra acotada del 4 al 5.</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'></div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'></div> """, unsafe_allow_html=True)
        st.markdown('')
        fig = plt.figure(figsize=(20,10))
        plt.rc('xtick', labelsize=16)
        plt.rc('ytick', labelsize=20)

        ax1 = fig.add_subplot(121)
        feq = listings[listings['number_of_reviews']>=10]
        feq1 = feq.groupby('neighbourhood')['review_scores_location'].mean().sort_values(ascending=True)
        ax1=feq1.plot.barh(color='b', width=1)
        plt.title(" Puntuaci√≥n promedio de la Ubicaci√≥nde en revisi√≥n (al menos con 10 revisiones)", fontsize=20)
        plt.xlabel('Puntuaci√≥n (escala 4-5)', fontsize=20)
        plt.ylabel("C√≥digos postales", fontsize=20)
        plt.xlim(4,5)

        ax2 = fig.add_subplot(122)
        feq = listings[listings['accommodates']==2]
        feq2 = feq.groupby('neighbourhood')['price'].mean().sort_values(ascending=True)
        ax2=feq2.plot.barh(color='b', width=1)
        plt.title("Precio medio diario para un alojamiento para 2 personas", fontsize=20)
        plt.xlabel('Precio medio diario (Dolar)', fontsize=20)
        plt.ylabel("C√≥digos postales", fontsize=20)

        plt.tight_layout()
        st.pyplot()

    # -------------------------------------------------------TAB 6-----------------------------------------------------#
    tab_plots = tabs[5]  
    with tab_plots:
        st.markdown('')
        st.markdown('')
        st.markdown('')

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Adem√°s de las rese√±as escritas, los invitados pueden enviar una calificaci√≥n de estrellas general y un conjunto de calificaciones de estrellas de categor√≠a. Los hu√©spedes pueden dar calificaciones sobre:</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>- Experiencia general. ¬øCu√°l fue su experiencia en general?</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>- Limpieza. ¬øSentiste que tu espacio estaba limpio y ordenado?</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>- Veracidad. ¬øCon qu√© precisi√≥n su p√°gina de listado represent√≥ su espacio?</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>- Calidad-precio. ¬øSinti√≥ que su listado proporcion√≥ un buen valor por el precio?</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>- Comunicaci√≥n. ¬øQu√© tan bien se comunic√≥ con su anfitri√≥n antes y durante su estad√≠a?</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>- Llegada. ¬øQu√© tan bien fue su registro?</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>- Localizaci√≥n. ¬øC√≥mo te sentiste en el barrio?</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>A continuaci√≥n se puede ver la distribuci√≥n de puntajes de todas esas categor√≠as. El 95 % de los listados de Airbnb calificaron de 4,5 a 5 estrellas. Despu√©s de haber visto las distribuciones de puntajes, personalmente considerar√≠a que cualquier puntaje de 4,5 o inferior no es un buen puntaje, por lo tanto he acotado las gr√°ficas en torno a esos valores.</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')

        listings10 = listings[listings['number_of_reviews']>=10]

        fig = plt.figure(figsize=(20,15))
        plt.rc('xtick', labelsize=5) 
        plt.rc('ytick', labelsize=5)


        ax1 = fig.add_subplot(321)
        feq=listings10['review_scores_location'].value_counts().sort_index()
        ax1=feq.plot.bar(color='b', width=1, rot=0)
        ax1.tick_params(axis = 'both', labelsize = 5)
        plt.title("Localizaci√≥n", fontsize=24)
        plt.ylabel('N√∫mero de anuncios', fontsize=14)
        plt.xlabel('Puntuaci√≥n media de las opiniones', fontsize=14)
        plt.xlim(88,110)

        ax2 = fig.add_subplot(322)
        feq=listings10['review_scores_cleanliness'].value_counts().sort_index()
        ax2=feq.plot.bar(color='b', width=1, rot=0)
        plt.title("Limpieza", fontsize=24)
        plt.ylabel('N√∫mero de anuncios', fontsize=14)
        plt.xlabel('Puntuaci√≥n media de las opiniones', fontsize=14)
        plt.xlim(100,122)

        ax3 = fig.add_subplot(323)
        feq=listings10['review_scores_value'].value_counts().sort_index()
        ax3=feq.plot.bar(color='b', width=1, rot=0)
        plt.title("Calidad-precio", fontsize=24)
        plt.ylabel('N√∫mero de anuncios', fontsize=14)
        plt.xlabel('Puntuaci√≥n media de las opiniones', fontsize=14)
        plt.xlim(87,109)

        ax4 = fig.add_subplot(324)
        feq=listings10['review_scores_communication'].value_counts().sort_index()
        ax4=feq.plot.bar(color='b', width=1, rot=0)
        plt.title("Communicaci√≥n", fontsize=24)
        plt.ylabel('N√∫mero de anuncios', fontsize=14)
        plt.xlabel('Puntuaci√≥n media de las opiniones', fontsize=14)
        plt.xlim(71,93)

        ax5 = fig.add_subplot(325)
        feq=listings10['review_scores_checkin'].value_counts().sort_index()
        ax5=feq.plot.bar(color='b', width=1, rot=0)
        plt.title("Llegada", fontsize=24)
        plt.ylabel('N√∫mero de anuncios', fontsize=14)
        plt.xlabel('Puntuaci√≥n media de las opiniones', fontsize=14)
        plt.xlim(73,89)

        ax6 = fig.add_subplot(326)
        feq=listings10['review_scores_accuracy'].value_counts().sort_index()
        ax6=feq.plot.bar(color='b', width=1, rot=0)
        plt.title("Veracidad", fontsize=24)
        plt.ylabel('N√∫mero de anuncios', fontsize=14)
        plt.xlabel('Puntuaci√≥n media de las opiniones', fontsize=14)
        plt.xlim(73,95)

        plt.tight_layout()
        st.pyplot()

        # -------------------------------------------------------TAB 7-----------------------------------------------------#
    tab_plots = tabs[6]
    with tab_plots:
        st.markdown('')
        st.markdown('')
        st.markdown('')

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>En Airbnb puedes encontrar superanfritiones, este estatus se consigue superando una series de condiciones que establece la propia empresa de Airbnb.</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>A continuaci√≥n podemos ver que hay bastantes superanfitriones en Austin.</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')

        listings.host_is_superhost = listings.host_is_superhost.replace({"t": "Si", "f": "No"})

        feq=listings['host_is_superhost'].value_counts()
        feq.plot.pie(autopct="%0.1f %%",figsize=(2, 2))
        plt.title("N√∫mero de anuncios con Superanfitri√≥n", fontsize=10)
        plt.ylabel('', fontsize=10)
        st.pyplot()

        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Sin embargo, mi consejo es que no se busque necesariamente un superanfitri√≥n, ya que √©stos suelen ser m√°s caros.</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')    
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>Como podemos ver, la mayor√≠a de los anfitriones con al menos 10 rese√±as responde al 100% de los mensajes nuevos. Podr√≠a decir que estos anfitriones tambi√©n son buenos, adem√°s, hay muy pocos anuncios con anfitriones que no respondan los mensajes nuevos despu√©s de unas pocas horas.</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'></div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'></div> """, unsafe_allow_html=True)

        fig = plt.figure(figsize=(20,10))
        plt.rc('xtick', labelsize=16)
        plt.rc('ytick', labelsize=20)

        ax1 = fig.add_subplot(121)
        feq1 = listings['host_response_rate'].dropna()
        ax1= plt.hist(feq1)
        plt.title("Ratio de respuesta (con al menos 10 comentarios)", fontsize=20)
        plt.ylabel("N√∫mero de anuncios")
        plt.xlabel("Porcentaje", fontsize=20)

        ax2 = fig.add_subplot(122)
        feq2 = listings['host_response_time'].value_counts()
        ax2=feq2.plot.bar(color='b', width=1, rot=45)
        plt.title("Tiempo de respuesta (con al menos 10 opiniones))", fontsize=20)
        plt.ylabel("N√∫mero de anuncios")
        plt.tight_layout()
        st.pyplot()

        # -------------------------------------------------------TAB 8-----------------------------------------------------#
    tab_plots = tabs[7]
    with tab_plots:
        st.markdown('')
        st.title('L√≠neas futuras')
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>* Mejorar la interfaz de la app.</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>* Buscar listado de vecindarios por c√≥digo postal y cambiar √©stos por los nombres de los barrios</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>* A√±adir gr√°fica de disponibilidad por fechas.</div> """, unsafe_allow_html=True)
        st.markdown('')    
        st.title("Conclusiones")
        st.markdown('')
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>* En Austin tenemos una gran variedad de viviendas para alquilar.</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>* Que no siempre un mayor precio se corresponde con una buena valoraci√≥n.</div> """, unsafe_allow_html=True)
        st.markdown(""" <div style='color:black; font-size: 30px; text-align: justify;'>* Que los anfitriones en Austin son bastante r√°pidos a la hora de responder, no hace falta escoger a un superanfitri√≥n.</div> """, unsafe_allow_html=True)
        st.markdown('')
        st.markdown('')
        st.markdown('')
        st.markdown('')
        st.markdown('')

        wordcloud = Image.open('Imag/descarga.png')
        st.image(wordcloud, caption='Nube de palabras hecha analizando las palabras m√°s repetidas en los comentarios.',
                    use_column_width='auto')
    
if __name__ == '__main__':
    main()
